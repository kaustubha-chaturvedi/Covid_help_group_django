# Generated by Django 2.1.5 on 2021-09-10 06:15

import CHP.models
import cloudinary.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AllData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('phone1', models.TextField(blank=True, null=True)),
                ('phone2', models.TextField(blank=True, null=True)),
                ('phone3', models.TextField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('landmark', models.TextField(blank=True, null=True)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('state', models.CharField(choices=[('AN', 'Andaman and Nicobar Islands'), ('AP', 'Andhra Pradesh'), ('AR', 'Arunachal Pradesh'), ('AS', 'Assam'), ('BR', 'Bihar'), ('CG', 'Chhattisgarh'), ('CH', 'Chandigarh'), ('DN', 'Dadra and Nagar Haveli'), ('DD', 'Daman and Diu'), ('DL', 'Delhi'), ('GA', 'Goa'), ('GJ', 'Gujarat'), ('HR', 'Haryana'), ('HP', 'Himachal Pradesh'), ('JK', 'Jammu and Kashmir'), ('JH', 'Jharkhand'), ('KA', 'Karnataka'), ('KL', 'Kerala'), ('LA', 'Ladakh'), ('LD', 'Lakshadweep'), ('MP', 'Madhya Pradesh'), ('MH', 'Maharashtra'), ('MN', 'Manipur'), ('ML', 'Meghalaya'), ('MZ', 'Mizoram'), ('NL', 'Nagaland'), ('OD', 'Odisha'), ('PB', 'Punjab'), ('PY', 'Pondicherry'), ('RJ', 'Rajasthan'), ('SK', 'Sikkim'), ('TN', 'Tamil Nadu'), ('TS', 'Telangana'), ('TR', 'Tripura'), ('UP', 'Uttar Pradesh'), ('UK', 'Uttarakhand'), ('WB', 'West Bengal')], default='DL', max_length=30)),
                ('mapUrl', models.URLField(blank=True, null=True)),
                ('field1', models.TextField(blank=True, null=True)),
                ('field2', models.TextField(blank=True, null=True)),
                ('field3', models.TextField(blank=True, null=True)),
                ('field4', models.TextField(blank=True, null=True)),
                ('field5', models.TextField(blank=True, null=True)),
                ('field6', models.TextField(blank=True, null=True)),
                ('field7', models.TextField(blank=True, null=True)),
                ('field8', models.TextField(blank=True, null=True)),
                ('field9', models.TextField(blank=True, null=True)),
                ('field10', models.TextField(blank=True, null=True)),
                ('field11', models.TextField(blank=True, null=True)),
                ('field12', models.TextField(blank=True, null=True)),
                ('field13', models.TextField(blank=True, null=True)),
                ('field14', models.TextField(blank=True, null=True)),
                ('field15', models.TextField(blank=True, null=True)),
                ('field16', models.TextField(blank=True, null=True)),
                ('field17', models.TextField(blank=True, null=True)),
                ('field18', models.TextField(blank=True, null=True)),
                ('field19', models.TextField(blank=True, null=True)),
                ('field20', models.TextField(blank=True, null=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_shown', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('icon', cloudinary.models.CloudinaryField(max_length=255)),
                ('field1', models.TextField(blank=True, null=True)),
                ('field2', models.TextField(blank=True, null=True)),
                ('field3', models.TextField(blank=True, null=True)),
                ('field4', models.TextField(blank=True, null=True)),
                ('field5', models.TextField(blank=True, null=True)),
                ('field6', models.TextField(blank=True, null=True)),
                ('field7', models.TextField(blank=True, null=True)),
                ('field8', models.TextField(blank=True, null=True)),
                ('field9', models.TextField(blank=True, null=True)),
                ('field10', models.TextField(blank=True, null=True)),
                ('field11', models.TextField(blank=True, null=True)),
                ('field12', models.TextField(blank=True, null=True)),
                ('field13', models.TextField(blank=True, null=True)),
                ('field14', models.TextField(blank=True, null=True)),
                ('field15', models.TextField(blank=True, null=True)),
                ('field16', models.TextField(blank=True, null=True)),
                ('field17', models.TextField(blank=True, null=True)),
                ('field18', models.TextField(blank=True, null=True)),
                ('field19', models.TextField(blank=True, null=True)),
                ('field20', models.TextField(blank=True, null=True)),
                ('is_shown', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('is_active', models.BooleanField(default=False, verbose_name='active')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='superuser')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
                ('usergroup', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='groups', to='auth.Group')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', CHP.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='alldata',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='category', to='CHP.Categories'),
        ),
    ]
